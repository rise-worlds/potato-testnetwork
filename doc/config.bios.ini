# the location of the blocks directory (absolute path or relative to application data dir) (potato::chain_plugin)
blocks-dir = "blocks"

# Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints. (potato::chain_plugin)
# checkpoint = 

# Override default WASM runtime (potato::chain_plugin)
# wasm-runtime = 

# Maximum size (in MB) of the chain state database (potato::chain_plugin)
chain-state-db-size-mb = 20480

# Maximum size (in MB) of the reversible blocks database (potato::chain_plugin)
reversible-blocks-db-size-mb = 10240

# print contract's output to console (potato::chain_plugin)
contracts-console = false

# Account added to actor whitelist (may specify multiple times) (potato::chain_plugin)
# actor-whitelist = 

# Account added to actor blacklist (may specify multiple times) (potato::chain_plugin)
# actor-blacklist = 

# Contract account added to contract whitelist (may specify multiple times) (potato::chain_plugin)
# contract-whitelist = 

# Contract account added to contract blacklist (may specify multiple times) (potato::chain_plugin)
# contract-blacklist = 

# Track actions which match receiver:action:actor. Actor may be blank to include all. Receiver and Action may not be blank. (potato::history_plugin)
# filter-on = *

# PEM encoded trusted root certificate (or path to file containing one) used to validate any TLS connections made.  (may specify multiple times)
#  (potato::http_client_plugin)
# https-client-root-cert = 

# true: validate that the peer certificates are valid and trusted, false: ignore cert errors (potato::http_client_plugin)
https-client-validate-peers = 1

# The local IP and port to listen for incoming http connections; set blank to disable. (potato::http_plugin)
http-server-address = 127.0.0.1:8888

# The local IP and port to listen for incoming https connections; leave blank to disable. (potato::http_plugin)
# https-server-address = 

# Filename with the certificate chain to present on https connections. PEM format. Required for https. (potato::http_plugin)
# https-certificate-chain-file = 

# Filename with https private key in PEM format. Required for https (potato::http_plugin)
# https-private-key-file = 

# Specify the Access-Control-Allow-Origin to be returned on each request. (potato::http_plugin)
access-control-allow-origin = *

# Specify the Access-Control-Allow-Headers to be returned on each request. (potato::http_plugin)
# access-control-allow-headers = 

# Specify the Access-Control-Max-Age to be returned on each request. (potato::http_plugin)
# access-control-max-age = 

# Specify if Access-Control-Allow-Credentials: true should be returned on each request. (potato::http_plugin)
access-control-allow-credentials = false

# The actual host:port used to listen for incoming p2p connections. (potato::net_plugin)
p2p-listen-endpoint = 0.0.0.0:9876

# An externally accessible host:port for identifying this node. Defaults to p2p-listen-endpoint. (potato::net_plugin)
# p2p-server-address = 

# The public endpoint of a peer node to connect to. Use multiple p2p-peer-address options as needed to compose a network. (potato::net_plugin)
# p2p-peer-address = 

# Maximum number of client0nodes from any single IP address (potato::net_plugin)
p2p-max-nodes-per-host = 1

# The name supplied to identify this node amongst the peers. (potato::net_plugin)
agent-name = "Potato Bios"

# Can be 'any' or 'producers' or 'specified' or 'none'. If 'specified', peer-key must be specified at least once. If only 'producers', peer-key is not required. 'producers' and 'specified' may be combined. (potato::net_plugin)
allowed-connection = any

# Optional public key of peer allowed to connect.  May be used multiple times. (potato::net_plugin)
# peer-key = 

# Tuple of [PublicKey, WIF private key] (may specify multiple times) (potato::net_plugin)
# peer-private-key = 

# Maximum number of clients from which connections are accepted, use 0 for no limit (potato::net_plugin)
max-clients = 25

# number of seconds to wait before cleaning up dead connections (potato::net_plugin)
connection-cleanup-period = 30

# True to require exact match of peer network version. (potato::net_plugin)
network-version-match = 0

# number of blocks to retrieve in a chunk from any individual peer during synchronization (potato::net_plugin)
sync-fetch-span = 100

# maximum sizes of transaction or block messages that are sent without first sending a notice (potato::net_plugin)
#max-implicit-request = 1500

# Enable block production, even if the chain is stale. (potato::producer_plugin)
enable-stale-production = true

# Start this node in a state where production is paused (potato::producer_plugin)
pause-on-startup = false

# Limits the maximum time (in milliseconds) that is allowed a pushed transaction's code to execute before being considered invalid (potato::producer_plugin)
max-transaction-time = 30

# Limits the maximum age (in seconds) of the DPOS Irreversible Block for a chain this node will produce blocks on (use negative value to indicate unlimited) (potato::producer_plugin)
max-irreversible-block-age = -1

# ID of producer controlled by this node (e.g. inita; may specify multiple times) (potato::producer_plugin)
producer-name = potato

# (DEPRECATED - Use signature-provider instead) Tuple of [public key, WIF private key] (may specify multiple times) (potato::producer_plugin)
# private-key = 

# Key=Value pairs in the form <public-key>=<provider-spec>
# Where:
#    <public-key>    	is a string form of a vaild EOSIO public key
# 
#    <provider-spec> 	is a string in the form <provider-type>:<data>
# 
#    <provider-type> 	is KEY, or KEOSD
# 
#    KEY:<data>      	is a string form of a valid EOSIO private key which maps to the provided public key
# 
#    KEOSD:<data>    	is the URL where keosd is available and the approptiate wallet(s) are unlocked (potato::producer_plugin)
signature-provider = POC6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV=KEY:5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3

# Limits the maximum time (in milliseconds) that is allowd for sending blocks to a keosd provider for signing (potato::producer_plugin)
kpocd-provider-timeout = 5

# The path of the wallet files (absolute path or relative to application data dir) (potato::wallet_plugin)
wallet-dir = "."

# Timeout for unlocked wallet in seconds (default 900 (15 minutes)). Wallets will automatically lock after specified number of seconds of inactivity. Activity is defined as any wallet command e.g. list-wallets. (potato::wallet_plugin)
unlock-timeout = 900

# potato key that will be imported automatically when a wallet is created. (potato::wallet_plugin)
# potato-key = 

# Plugin(s) to enable, may be specified multiple times
# plugin = 
plugin = potato::producer_plugin
#plugin = potato::producer_api_plugin
plugin = potato::chain_api_plugin
#plugin = potato::history_plugin
#plugin = potato::history_api_plugin
plugin = potato::net_api_plugin

#plugin = potato::mongo_db_plugin
#mongodb-uri = mongodb://127.0.0.1:27017/POTATO

